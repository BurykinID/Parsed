import com.google.gson.Gson;import java.io.*;import java.util.ArrayList;import java.util.HashMap;import java.util.regex.Matcher;import java.util.regex.Pattern;import org.jsoup.Connection;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;public class Parsed{    public static void main(String args[])    {        Document inputData = null;        try        {            inputData = Jsoup.connect(args[0]).ignoreContentType(true).get();            String arrays = "";            String res = "";            String s = inputData.html();            String name = "";            String cost = "";            HashMap<String, String> info = new HashMap<>();            Pattern pattern = Pattern.compile("og:title\" content=\"(.+[^-])- цена ([0-9]{1,7})");            Matcher matcher = pattern.matcher(s);            if(matcher.find())            {                name = matcher.group(1);                cost = matcher.group(2);            }            pattern = Pattern.compile("(?s)Действующие вещества:(.*?)</tr>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Действующие вещества", matcher.group(0));            if(info.get("Действующие вещества") != null)                if(info.get("Действующие вещества").equals("*"))                {                    info.replace("Действующие вещества", null);                } else                {                    String k = info.get("Действующие вещества");                    String q = "";                    ArrayList<String> answ = new ArrayList<>();                    pattern = Pattern.compile(".*?class=\".?\">(.*?)</a>");                    matcher = pattern.matcher(k);                    do                    {                        if(!matcher.find())                            break;                        if(!matcher.group(1).equals("*"))                            answ.add(matcher.group(1));                    } while(true);                    if(answ.size() > 0)                    {                        for(int i = 0; i < answ.size() - 1; i++)                        {                            q = answ.get(i);                            q = q.replace(" ", "");                            q = q+",";                        }                        q = q+answ.get(answ.size() - 1);                        info.replace("Действующие вещества", q);                    }                    info.replace("Действующие вещества", q);                }            if(info.get("Действующие вещества").equals("")){                info.replace("Действующие вещества", null);            }            pattern = Pattern.compile("(?s)Производитель:.*?<td itemprop=\"brand\">(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Производитель", matcher.group(1));            replaseData(info, "Производитель", ";");            pattern = Pattern.compile("(?s)Страна происхождения:.*?<td>(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Страна происхождения", matcher.group(1));            replaseData(info, "Страна происхождения", ";");            pattern = Pattern.compile("(?s)Фармакотерапевтическая группа:.*?<td>(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Фармакотерапевтическая группа", matcher.group(1));            replaseData(info, "Фармакотерапевтическая группа", ";");            pattern = Pattern.compile("(?s)Форма выпуска и упаковка:.*?<td itemprop=\"description\">(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Форма выпуска и упаковка", matcher.group(1));            replaseData(info, "Форма выпуска и упаковка", ";");            pattern = Pattern.compile("(?s)Хранить в сухом месте:.*?<td>(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Хранить в сухом месте", matcher.group(1));            replaseData(info, "Хранить в сухом месте", ";");            pattern = Pattern.compile("(?s)Хранить при комнатной температуре 15-25 градусов:.*?<td>(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Хранить при комнатной температуре 15-25 градусов", matcher.group(1));            replaseData(info, "Хранить при комнатной температуре 15-25 градусов", ";");            pattern = Pattern.compile("(?s)Хранить в защищенном от света месте:.*?<td>(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Хранить в защищенном от света месте", matcher.group(1));            replaseData(info, "Хранить в защищенном от света месте", ";");            pattern = Pattern.compile("(?s)Беречь от детей:.*?<td>(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Беречь от детей", matcher.group(1));            replaseData(info, "Беречь от детей", ";");            pattern = Pattern.compile("(?s)Категория.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Категория", matcher.group(1));            replaseData(info, "Категория", " ");            replaseData(info, "Категория", "\n");            replaseData(info, "Категория", ";");            pattern = Pattern.compile("(?s)Подкатегория.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Подкатегория", matcher.group(1));            replaseData(info, "Подкатегория", " ");            replaseData(info, "Подкатегория", "\n");            replaseData(info, "Подкатегория", ";");            pattern = Pattern.compile("(?s)Зарегистрирован как.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Зарегистрирован как", matcher.group(1));            replaseData(info, "Зарегестрирован как", " ");            replaseData(info, "Зарегестрирован как", "\n");            replaseData(info, "Зарегестрирован как", ";");            pattern = Pattern.compile("(?s)Действие.*?<td class=\".*?\">(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Действие", matcher.group(1));            if(info.get("Действие") != null)            {                String q = info.get("Действие");                ArrayList answ = new ArrayList();                String el = "";                pattern = Pattern.compile("(?s)<a data-key=\".*?\".*?>(.*?)</a>");                for(matcher = pattern.matcher(q); matcher.find(); answ.add(el))                {                    el = matcher.group(1);                    el = el.replace(" ", "");                }                el = "";                for(int i = 0; i < answ.size() - 1; i++)                    el = el+answ.get(i)+",";                el = el+answ.get(answ.size() - 1);                if(!el.equals(""))                    info.replace("Действие", el);                else                    info.replace("Действие", null);            }            pattern = Pattern.compile("(?s)Бренд.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Бренд", matcher.group(1));            replaseData(info, "Бренд", " ");            replaseData(info, "Бренд", "\n");            replaseData(info, "Бренд", ";");            pattern = Pattern.compile("(?s)Состояние кожи.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Состояние кожи", matcher.group(1));            replaseData(info, "Состояние кожи", " ");            replaseData(info, "Состояние кожи", "\n");            replaseData(info, "Состояние кожи", ";");            pattern = Pattern.compile("(?s)Ваши потребности.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Ваши потребности", matcher.group(1));            replaseData(info, "Ваши потребности", " ");            replaseData(info, "Ваши потребности", "\n");            replaseData(info, "Ваши потребности", ";");            pattern = Pattern.compile("(?s)Текстуры.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Текстуры", matcher.group(1));            replaseData(info, "Текстуры", " ");            replaseData(info, "Текстуры", "\n");            replaseData(info, "Текстуры", ";");            pattern = Pattern.compile("(?s)Текстура.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Текстура", matcher.group(1));            replaseData(info, "Текстура", " ");            replaseData(info, "Текстура", "\n");            replaseData(info, "Текстура", ";");            pattern = Pattern.compile("(?s)Лекарственная форма</td>.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Лекарственная форма кратко", matcher.group(1));            replaseData(info, "Лекарственная форма кратко", ";");            pattern = Pattern.compile("(?s)Лекарственная форма.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Лекарственная форма", matcher.group(1));            replaseData(info, "Лекарственная форма", ";");            pattern = Pattern.compile("(?s)Тип кожи.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Тип кожи", matcher.group(1));            replaseData(info, "Тип кожи", " ");            replaseData(info, "Тип кожи", "\n");            pattern = Pattern.compile("(?s)Тип</td>.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Тип", matcher.group(1));            replaseData(info, "Тип", ";");            pattern = Pattern.compile("(?s)Тест на</td>.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Тест на", matcher.group(1));            replaseData(info, "Тест на", ";");            arrays = "";            pattern = Pattern.compile("(?s)Специальные особенности.*?<td class=\".*?\".*?>(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                arrays = matcher.group(1);            if(!arrays.equals(""))            {                res = "";                pattern = Pattern.compile("(?s).*?<a data-key=\".*?\">(.*?)</a>");                for(matcher = pattern.matcher(arrays); matcher.find();)                    res = res+matcher.group(1);                if(!res.equals(""))                    info.put("Специальные особенности", res);                else                    info.put("Специальные особенности", null);            }            replaseData(info, "Специальные особенности", ";");            pattern = Pattern.compile("(?s)Показания.*?<td class=\".*?\">(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Показания кратко", matcher.group(1));            if(info.get("Показания кратко") != null){                String q = info.get("Показания кратко");                String preanswer = "";                ArrayList<String> answ = new ArrayList<>();                pattern = Pattern.compile("(?s)<a data-key=\".*?\".*?>(.*?)</a>");                matcher = pattern.matcher(q);                while (matcher.find()){                    preanswer = matcher.group(1);                    preanswer = preanswer.replaceFirst(" ", "");                    preanswer = preanswer.replace(";", "ТСЗПТ");                    answ.add(preanswer);                }                preanswer = "";                for (int i = 0; i < (answ.size()-1); i++){                    preanswer += answ.get(i) + ", ";                }                preanswer += answ.get(answ.size()-1);                if(!preanswer.equals("")){                    info.replace("Показания кратко", preanswer);                }                else                    info.replace("Показания кратко", null);            }            pattern = Pattern.compile("(?s)Форма выпуска</td>.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Форма выпуска", matcher.group(1));            replaseData(info, "Форма выпуска", ";");            pattern = Pattern.compile("(?s)Количество в упаковке</td>.*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Количество в упаковке", matcher.group(1));            replaseData(info, "Количество в упаковке", ";");            pattern = Pattern.compile("(?s)Состав.*?<td class=\".*?\">(.*?)</td>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Состав кратко", matcher.group(1));            if(info.get("Состав кратко") != null)            {                String q = info.get("Состав кратко");                ArrayList answ = new ArrayList();                String el = "";                pattern = Pattern.compile("(?s)<a data-key=\".*?\".*?>(.*?)</a>");                matcher = pattern.matcher(q);                while(matcher.find())                {                    el = matcher.group(1);                    el = el.replaceFirst(" ", "");                    answ.add(el);                }                el = "";                for(int i = 0; i < answ.size() - 1; i++)                    el = answ.get(i) + ", ";                el += answ.get(answ.size() - 1);                if(!el.equals(""))                    info.replace("Состав кратко", el);                else                    info.replace("Состав кратко", null);            }            replaseData(info, "Состав кратко", ";");            pattern = Pattern.compile("(?s)Состав</h3>.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Состав", matcher.group(1));            replaseData(info, "Состав", ";");            pattern = Pattern.compile("(?s)Описание.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Описание", matcher.group(1));            replaseData(info, "Описание", ";");            pattern = Pattern.compile("(?s)Фармакодинамика.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Фармакодинамика", matcher.group(1));            replaseData(info, "Фармакодинамика", ";");            pattern = Pattern.compile("(?s)Фармакокинетика.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Фармакокинетика", matcher.group(1));            replaseData(info, "Фармакокинетика", ";");            pattern = Pattern.compile("(?s)Побочные действия.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Побочные действия", matcher.group(1));            replaseData(info, "Побочные действия", ";");            pattern = Pattern.compile("(?s)Особенности продажи.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Особенности продажи", matcher.group(1));            replaseData(info, "Особенности продажи", ";");            pattern = Pattern.compile("(?s)Особые условия хранения.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Особые условия хранения", matcher.group(1));            replaseData(info, "Особые условия хранения", ";");            pattern = Pattern.compile("(?s)Особые условия</h3>.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Особые условия", matcher.group(1));            replaseData(info, "Особые условия", ";");            pattern = Pattern.compile("(?s)Показания</h3>.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Показания", matcher.group(1));            replaseData(info, "Показания", ";");            pattern = Pattern.compile("(?s)Вес (г).*?<a data-key=\".*?\".*?>(.*?)</a>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Вес", matcher.group(2));            if(info.get("Вес") != null) {                replaseData(info, "Вес", " ");                replaseData(info, "Вес", "\n");            }            else {                pattern = Pattern.compile("(?s)Вес.*?<a data-key=\".*?\".*?>(.*?)</a>");                matcher = pattern.matcher(s);                if(matcher.find())                    info.put("Вес", matcher.group(1));                replaseData(info, "Вес", " ");                replaseData(info, "Вес", "\n");            }            pattern = Pattern.compile("(?s)Противопоказания.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Противопоказания", matcher.group(1));            replaseData(info, "Противопоказания", ";");            pattern = Pattern.compile("(?s)Лекарственное взаимодействие.*?<p>(.*?)</p>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Лекарственное взаимодействие", matcher.group(1));            replaseData(info, "Лекарственное взаимодействие", ";");            pattern = Pattern.compile("(?s)Дозировка</h3>(.*?)</div>");            matcher = pattern.matcher(s);            if(matcher.find())                info.put("Дозировка", matcher.group(1));            replaseData(info, "Дозировка", "\n");            replaseData(info, "Дозировка", ";");            System.out.println("Название: "+ name + "\nЦена: " + cost +                    "\nДействующие вещества: " + info.get("Действующие вещества") + "\nПроизводитель: " + info.get("Производитель") +                    "\nСтрана происхождения: " + info.get("Страна происхождения") +                    "\nФармакотерапевтическая группа: " + info.get("Фармакотерапевтическая группа") +                    "\nФорма выпуска и упаковка: " + info.get("Форма выпуска и упаковка") + "\nПоказания кратко: " + info.get("Показания кратко") +                    "\nФорма выпуска: " + info.get("Форма выпуска") +                    "\nХранить в сухом месте: " + info.get("Хранить в сухом месте") +                    "\nХранить при комнатной температуре 15-25 градусов: " + info.get("Хранить при комнатной температуре 15-25 градусов") +                    "\nХранить в защищенном от света месте: " + info.get("Хранить в защищенном от света месте") +                    "\nБеречь от детей: " + info.get("Беречь от детей") + "\nКатегория: " + info.get("Категория") +                    "\nВес: " + info.get("Вес") + "\nПодкатегория: " + info.get("Подкатегория") +                    "\nДействие: " + info.get("Действие") + "\nЗарегистрирован как: " + info.get("Зарегистрирован как") +                    "\nБренд: " + info.get("Бренд") + "\nТип: " + info.get("Тип") +                    "\nТест на: "+info.get("Тест на") + "\nКоличество в упаковке: " + info.get("Количество в упаковке") +                    "\nСостояние кожи: " + info.get("Состояние кожи") + "\nВаши потребности: " + info.get("Ваши потребности") +                    "\nТекстуры: " + info.get("Текстуры") + "\nТекстура: " + info.get("Текстура") +                    "\nЛекарственная форма кратко : " + info.get("Лекарственная форма кратко") +                    "\nЛекарственная форма: " + info.get("Лекарственная форма") + "\nТип кожи: " + info.get("Тип кожи") +                    "\nСпециальные особенности: " + info.get("Специальные особенности") + "\nЛекарственная форма: " + info.get("Лекарственная форма") +                    "\nСостав: " + info.get("Состав") + "\nСостав кратко: " + info.get("Состав кратко") +                    "\nОписание: " + info.get("Описание") + "\nФармакодинамика: " + info.get("Фармакодинамика") +                    "\nФармакокинетика: " + info.get("Фармакокинетика") + "\nПобочные действия: " + info.get("Побочные действия") +                    "\nОсобенности продажи: " + info.get("Особенности продажи") + "\nОсобые условия хранения: " + info.get("Особые условия хранения") +                    "\nОсобые условия: " + info.get("Особые условия") + "\nПоказания: " + info.get("Показания") +                    "\nПротивопоказания: " + info.get("Противопоказания") + "\nЛекарственное взаимодействие: " + info.get("Лекарственное взаимодействие") +                    "\nДозировка: " + info.get("Дозировка"));            //BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("C:\\Users\\admin\\Desktop\\Новая папка\\Tovar.CSV"), "cp1251"));            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(args[1]), "cp1251"));            fileWrite(name, cost, info, bw);        }        catch(IOException e)        {            e.printStackTrace();        }    }    private static void fileWrite(String name, String cost, HashMap<String, String> dop1, BufferedWriter bw)    {        try        {            String getDate = "";            getDate += "Название;"+name+"\nЦена;"+cost+"\n";            if(dop1.get("Действующие вещества") != null)                getDate += "Действующие вещества;"+dop1.get("Действующие вещества")+"\n";            if(dop1.get("Производитель") != null)                getDate += "Производитель;"+dop1.get("Производитель")+"\n";            if(dop1.get("Страна происхождения") != null)                getDate += "Страна происхождения;"+dop1.get("Страна происхождения")+"\n";            if(dop1.get("Форма выпуска и упаковка") != null)                getDate += "Форма выпуска и упаковка;"+dop1.get("Форма выпуска и упаковка")+"\n";            if(dop1.get("Показания кратко") != null)                getDate += "Показания кратко;"+dop1.get("Показания кратко")+"\n";            if(dop1.get("Форма выпуска") != null)                getDate += "Форма выпуска;"+dop1.get("Форма выпуска")+"\n";            if(dop1.get("Фармакотерапевтическая группа") != null)                getDate += "Фармакотерапевтическая группа;"+dop1.get("Фармакотерапевтическая группа")+"\n";            if(dop1.get("Хранить в сухом месте") != null)                getDate += "Хранить в сухом месте;"+dop1.get("Хранить в сухом месте")+"\n";            if(dop1.get("Хранить при комнатной температуре 15-25 градусов") != null)                getDate += "Хранить при комнатной температуре 15-25 градусов;"+dop1.get("Хранить при комнатной температуре 15-25 градусов")+"\n";            if(dop1.get("Хранить в защищенном от света месте") != null)                getDate += "Хранить в защищенном от света месте;"+dop1.get("Хранить в защищенном от света месте")+"\n";            if(dop1.get("Беречь от детей") != null)                getDate += "Беречь от детей;"+dop1.get("Беречь от детей")+"\n";            if(dop1.get("Категория") != null)                getDate += "Категория;"+dop1.get("Категория")+"\n";            if(dop1.get("Вес") != null)                getDate += "Вес;"+dop1.get("Вес")+"\n";            if(dop1.get("Подкатегория") != null)                getDate += "Подкатегория;"+dop1.get("Подкатегория")+"\n";            if(dop1.get("Действие") != null)                getDate += "Действие;"+dop1.get("Действие")+"\n";            if(dop1.get("Зарегистрирован как") != null)                getDate += "Зарегистрирован как;"+dop1.get("Зарегистрирован как")+"\n";            if(dop1.get("Бренд") != null)                getDate += "Бренд;"+dop1.get("Бренд")+"\n";            if(dop1.get("Состояние кожи") != null)                getDate += "Состояние кожи;"+dop1.get("Состояние кожи")+"\n";            if(dop1.get("Ваши потребности") != null)                getDate += "Ваши потребности;"+dop1.get("Ваши потребности")+"\n";            if(dop1.get("Текстуры") != null)                getDate += "Текстуры;"+dop1.get("Текстуры")+"\n";            if(dop1.get("Текстура") != null)                getDate += "Текстура;"+dop1.get("Текстура")+"\n";            if(dop1.get("Лекарственная форма") != null)                getDate += "Лекарственная форма;"+dop1.get("Лекарственная форма")+"\n";            if(dop1.get("Тип кожи") != null)                getDate += "Тип кожи;"+dop1.get("Тип кожи")+"\n";            /*if(dop1.get("Лекарственная форма") != null)                getDate += "Лекарственная форма;"+dop1.get("Лекарственная форма")+"\n";*/            if(dop1.get("Тип") != null)                getDate += "Тип;"+dop1.get("Тип")+"\n";            if(dop1.get("Тест на") != null)                getDate += "Тест на;"+dop1.get("Тест на")+"\n";            if(dop1.get("Количество в упаковке") != null)                getDate += "Количество в упаковке;"+dop1.get("Количество в упаковке")+"\n";            if(dop1.get("Состав кратко") != null)                getDate += "Состав кратко;"+dop1.get("Состав кратко")+"\n";            if(dop1.get("Состав") != null)                getDate += "Состав;"+dop1.get("Состав")+"\n";            if(dop1.get("Описание") != null)                getDate += "Описание;"+dop1.get("Описание")+"\n";            if(dop1.get("Фармакодинамика") != null)                getDate += "Фармакодинамика;"+dop1.get("Фармакодинамика")+"\n";            if(dop1.get("Фармакокинетика") != null)                getDate += "Фармакокинетика;"+dop1.get("Фармакокинетика")+"\n";            if(dop1.get("Побочные действия") != null)                getDate += "Побочные действия;"+dop1.get("Побочные действия")+"\n";            if(dop1.get("Особенности продажи") != null)                getDate += "Особенности продажи;"+dop1.get("Особенности продажи")+"\n";            if(dop1.get("Особые условия хранения") != null)                getDate += "Особые условия хранения;"+dop1.get("Особые условия хранения")+"\n";            if(dop1.get("Особые условия") != null)                getDate += "Особые условия;"+dop1.get("Особые условия")+"\n";            if(dop1.get("Показания") != null)                getDate += "Показания;"+dop1.get("Показания")+"\n";            if(dop1.get("Противопоказания") != null)                getDate += "Противопоказания;"+dop1.get("Противопоказания")+"\n";            if(dop1.get("Лекарственное взаимодействие") != null)                getDate += "Лекарственное взаимодействие;"+dop1.get("Лекарственное взаимодействие")+"\n";            if(dop1.get("Дозировка") != null)                getDate += "Дозировка;"+dop1.get("Дозировка");            bw.write(getDate);            bw.flush();            bw.close();        }        catch(IOException e)        {            e.printStackTrace();        }    }    private static void replaseData(HashMap<String, String> dop1, String useField, String delimiter){        boolean res;        res = checkNull(useField, dop1);        if (!res){            String q = dop1.get(useField);            if( delimiter.equals(";")){                q = q.replace(";", "ТСЗПТ");            }            if(delimiter.equals(" ")){                q = q.replaceFirst(" ", "");            }            if(delimiter.equals("\n")){                q = q.replace("\n", " ");            }            dop1.replace(useField, q);        }        else return;    }    private static boolean checkNull(String useField, HashMap<String, String> dop1){        if (dop1.get(useField) != null){            return false;        }        else return true;    }}